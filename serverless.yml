org: presentmate
app: flickfacts
service: flickfacts

provider:
  name: aws
  region: us-west-2
  stage: ${opt:stage, 'dev'}
  architecture: arm64
  runtime: php-84
  memorySize: 1024
  timeout: 6
  logRetentionInDays: 7
  httpApi:
    cors: true
  tracing:
    lambda: true
    apiGateway: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sts:GetSessionToken
      Resource: "*"
    - Effect: Allow
      Action:
        - dsql:*
      Resource: "*"

plugins:
  - ./vendor/bref/bref
  - serverless-lift
  - serverless-iam-roles-per-function

functions:
  # Theater
  CreateTheater:
    handler: handler/Theater/CreateTheater.php
    description: 'Create a new Theater'
    events:
      - httpApi:
          path: /theaters
          method: POST

  GetTheaters:
    handler: handler/Theater/GetTheaters.php
    description: 'Get Theaters'
    events:
      - httpApi:
          path: /theaters
          method: GET

  GetTheater:
    handler: handler/Theater/GetTheater.php
    description: 'Get Theater'
    events:
      - httpApi:
          path: /theaters/{theaterId}
          method: GET

  CreateTicket:
    handler: handler/Theater/CreateTicket.php
    description: 'Create a new Ticket'
    events:
      - httpApi:
          path: /theaters/{theaterId}/tickets
          method: POST

  GetTickets:
    handler: handler/Theater/GetTickets.php
    description: 'Get Tickets for the Theater'
    events:
      - httpApi:
          path: /theaters/{theaterId}/tickets
          method: GET

  GetTheaterMovieSales:
    handler: handler/Reporting/GetTheaterMovieSales.php
    description: 'Get total movie sales and revenue for a specific theater'
    events:
      - httpApi:
          path: /theaters/{theaterId}/movie-sales
          method: GET


  SellTicket:
    handler: handler/Theater/SellTicket.php
    description: 'Sell a Ticket'
    events:
      - httpApi:
          path: /theaters/{theaterId}/tickets-sell
          method: POST

  # Movie
  CreateMovie:
    handler: handler/Movie/CreateMovie.php
    description: 'Create a new Movie'
    events:
      - httpApi:
          path: /movies
          method: POST

  GetMovies:
    handler: handler/Movie/GetMovies.php
    description: 'Get Movies'
    events:
      - httpApi:
          path: /movies
          method: GET

  GetMovie:
    handler: handler/Movie/GetMovie.php
    description: 'Get Movie'
    events:
      - httpApi:
          path: /movies/{movieId}
          method: GET

  GetMovieTheaterSales:
    handler: handler/Reporting/GetMovieTheaterSales.php
    description: 'Get total theater sales and revenue for a specific movie'
    events:
      - httpApi:
          path: /movies/{movieId}/theater-sales
          method: GET

  # Reporting
  GetHighestSales:
    handler: handler/Reporting/GetHighestSales.php
    description: 'Get highest performing Theater per a given date'
    events:
      - httpApi:
          path: /highest-sales
          method: GET


# Exclude files from deployment
package:
  patterns:
    - '!node_modules/**'
    - '!backend/tests/**'
    - '!frontend/node_modules/**'
    - '!frontend/**'

constructs:
  website:
    type: single-page-app
    path: frontend/dist
